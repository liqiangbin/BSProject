package com.cn.hnust.controller;  
  
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cn.hnust.pojo.Assess;
import com.cn.hnust.pojo.Book;
import com.cn.hnust.pojo.Customer;
import com.cn.hnust.pojo.Interest;
import com.cn.hnust.pojo.Notice;
import com.cn.hnust.pojo.Page;
import com.cn.hnust.pojo.Searchinfo;
import com.cn.hnust.pojo.Subtype;
import com.cn.hnust.pojo.Suggest;
import com.cn.hnust.pojo.Type;
import com.cn.hnust.service.AssessService;
import com.cn.hnust.service.BookService;
import com.cn.hnust.service.CustomerService;
import com.cn.hnust.service.InterestService;
import com.cn.hnust.service.NoticeService;
import com.cn.hnust.service.SearchInfoService;
import com.cn.hnust.service.SubTypeService;
import com.cn.hnust.service.SuggestService;
import com.cn.hnust.service.TypeService;
import com.mysql.fabric.xmlrpc.base.Array;
  
@Controller  

@RequestMapping("/customer")  
public class CustomerController { 
	
	private static String zhuzuo="00";
	private static String keji="10";
	private static String jiaoyu="20";
	private static String shenghuo="30";
	private static String zhengzhi="40";
	//推荐常量赋值
	private static final int INTEREST_WAY=3;
	private static final int SALED_WAY=2;
	private static final int SEARCH_WAY=1;
	private static final int ASSESS_WAY=4;
	
	//数据库中用户id
	private static String oldCus="1";
	private static String newCus="2";
	private static String visitor="3";
    @Resource  
    private CustomerService customerService;  
    @Resource  
    private TypeService typeService;  
    @Resource  
    private SubTypeService subTypeService; 
    @Resource 
    private NoticeService noticeService; 
    @Resource 
    private BookService bookService; 
    @Resource 
    private SearchInfoService searchInfoService;
    @Resource 
    private SuggestService suggestService;
    @Resource 
    private InterestService interestService;
    @Resource 
    private AssessService assessService;
      
    @RequestMapping("/regeist")  
    public String toIndex(HttpServletRequest request,Customer customer,Model model){  
       System.out.println("zhuce");
    	int s=customerService.insert(customer);
    	if(s==1){
    		model.addAttribute("regeistMessage", "注册成功！请登录");
    	}else{
    		model.addAttribute("regeistMessage", "注册失败！请重试");
    	}
    	return "customer/login";  
    }  
    @RequestMapping("/update")  
    public String update(HttpServletRequest request,Customer customer,Model model){  
       
    	int s=customerService.updateById(customer);
    	if(s==1){
    		model.addAttribute("updateMessage", "修改成功");
    	}else{  
    		model.addAttribute("updateMessage", "修改失败");
    	}
    	return "update";  
    }  
    @RequestMapping("/index")  
    public String index(HttpServletRequest request,Customer customer,Model model,Type type,Subtype sub1,HttpSession session){  
    	//查询图书分类信息
    	List<Type> workList=new ArrayList();
    	List<Type> lifeList=new ArrayList();
    	List<Type> scienceList=new ArrayList();
    	List<Type> educateList=new ArrayList();
    	List<Type> otherList=new ArrayList();
    	List<Type> politicList=new ArrayList();
    	List<Type> typeList = typeService.getByParams(type);
 		List<Subtype> subList = subTypeService.getAllSelect(sub1);
 		for (Type type1 : typeList) {
 			String s=type1.getTypenumber().toString().substring(0, 2);
 			if(s.equals(CustomerController.zhuzuo)){
 				workList.add(type1);
 			}
 			else if(s.equals(CustomerController.keji)){
 				scienceList.add(type1);
 			}
 			else if(s.equals(CustomerController.jiaoyu)){
 				educateList.add(type1);
 			}
 			else if(s.equals(CustomerController.shenghuo)){
 				lifeList.add(type1);
 			}else if(s.equals(CustomerController.zhengzhi)){
 				politicList.add(type1);
 			}else{
 				otherList.add(type1);
 			}
		}
 		session.setAttribute("workList", workList);
 		session.setAttribute("scienceList", scienceList);
 		session.setAttribute("educateList", educateList);
 		session.setAttribute("lifeList", lifeList);
 		session.setAttribute("politicList", politicList);
 		session.setAttribute("otherList", otherList);
 		session.setAttribute("subList", subList);
       //查询最新优惠信息
    	List<Notice> AllList=noticeService.SellectAll();
    	List<Notice> allActivityList=new ArrayList();
    	List<Notice> top3ActivityList=new ArrayList();
    	int top=0;
    	for (Notice notice : AllList) {
			if(notice.getType()==1){
				allActivityList.add(notice);
				if(top<3){
				top3ActivityList.add(notice);
				top++;
				}
			}
			
		}
    	model.addAttribute("top3ActivityList",top3ActivityList);
       //查询图书销量排行
    	List<Book> bookList=bookService.getBySaled();
    	List<Book> top3BbookList=new ArrayList();
    	int top1=0;
    	for (Book book : bookList) {
			if(top1<3){
				top3BbookList.add(book);
				top1++;
				}else{
					break;
				}
		}
    	model.addAttribute("top3BbookList",top3BbookList);
      //查询新书上架
    	List<Book> newbookList=bookService.getBookByIdDesc();
    	List<Book> newBookTop3=new ArrayList<Book>();
    	int topNumber=4;
    	if(newbookList.size()<topNumber){
    		topNumber=newbookList.size();
    	}
    	System.out.println("top4list。size()"+newBookTop3.size());
    	for(int i=0;i<topNumber;i++){
    		newBookTop3.add(newbookList.get(i));
    	}
    	model.addAttribute("newBookTop3",newBookTop3);
    	
      //查询智能推荐
    List<Book> suggestTop5=new ArrayList<Book>();
    List<Suggest> allSuggest=suggestService.sellectAll();
    System.out.println("suggest.size()"+allSuggest.size());
    Suggest oldCusWay=new Suggest();
    Suggest newCusWay=new Suggest();
    Suggest otherCusWay=new Suggest();
    for (Suggest suggest : allSuggest) {
		if(suggest.getId()==1){
			oldCusWay=suggest;
			System.out.println("Id:"+suggest.getId());
		}
		if(suggest.getId()==2){
			newCusWay=suggest;
		}
		if(suggest.getId()==3){
			otherCusWay=suggest;
		}
	}
    //获取评分最高的图书列表
    List<Assess> assessList=new ArrayList<Assess>();
    List<Book> assessBookList=new ArrayList<Book>();
    assessList=assessService.getByRankDesc();
     int top4Rank=4;
     if(assessList.size()<4){
    	 top4Rank=assessList.size();
     }
     for(int i=0;i<top4Rank;i++){
    	Book book=bookService.selectById(assessList.get(i).getBookid());
    	assessBookList.add(book);
     }
     System.out.println("评分最高的图书集合："+assessBookList.size());
    //获取登录session
    Customer cus=(Customer) session.getAttribute("loginCustomer");
    //判断用户是否登录
    if(null!=cus){
    	//获取注册提交的兴趣项并且查询图书列表
    	Interest CusInterest=interestService.selectByCusId(cus.getId());
    	System.out.println("兴趣选项"+CusInterest.getInterestedsubtypeid());
    	Map<String, Object> condition = new HashMap<String, Object>();
    	condition.put("subtype", Integer.parseInt(CusInterest.getInterestedsubtypeid()));
    	Page page = new Page(10, 1);
    	condition.put("startPos", page.getStartPos());
		condition.put("pageSize", page.getPageSize());
		bookList = this.bookService.getBookByPage(condition);
		System.out.println("兴趣图书"+bookList.size());
		
    	//判断用户为新用户还是老用户
    	List<Searchinfo> searchList=searchInfoService.selectByCusId(cus.getId());
    	if(searchList.size()<4){
    		//新用户推荐方式  
    		int way=newCusWay.getChoosenumber();
    	switch (way) {
		case CustomerController.INTEREST_WAY:
			suggestTop5=bookList;
			break;
        case CustomerController.SALED_WAY:
        	suggestTop5=top3BbookList;
			break;
        case CustomerController.ASSESS_WAY:
        	suggestTop5=assessBookList;
			break;

		}
    		
    		
    	}else{
    		//老用户推荐方式
    		
    		//根据关键字查询结果并随机取值
    		List<Searchinfo> infoList=searchInfoService.selectByCusId(cus.getId());
    		for (Searchinfo searchinfo : infoList) {
				System.out.println("检索信息"+searchinfo.getSearchwords());
			}
    		List<Book> searchBookList=new ArrayList<Book>();
    		
    		
    		
    		int way=oldCusWay.getChoosenumber();
    		switch (way) {
    		case CustomerController.INTEREST_WAY:
    			suggestTop5=bookList;
    			break;
            case CustomerController.SALED_WAY:
            	suggestTop5=top3BbookList;
    			break;
            case CustomerController.SEARCH_WAY:
    			
    			break;
            case CustomerController.ASSESS_WAY:
            	suggestTop5=assessBookList;
    			break;

    		}
    	}
    }else{
    	//根据普通游客推荐方式为游客推荐  只有销量排行推荐
    	int way=otherCusWay.getChoosenumber();
    	switch (way) {
        case CustomerController.SALED_WAY:
        	suggestTop5=top3BbookList;
			break;
        case CustomerController.ASSESS_WAY:
        	suggestTop5=assessBookList;
			break;

		}
    	
    }
    	return "/customer/index";  
    }
    /** 
     * 随机指定范围内N个不重复的数 
     * 最简单最基本的方法 
     * @param min 指定范围最小值 
     * @param max 指定范围最大值 
     * @param n 随机数个数 
     */  
    public static int[] randomCommon(int min, int max, int n){  
        if (n > (max - min + 1) || max < min) {  
               return null;  
           }  
        int[] result = new int[n];  
        int count = 0;  
        while(count < n) {  
            int num = (int) (Math.random() * (max - min)) + min;  
            boolean flag = true;  
            for (int j = 0; j < n; j++) {  
                if(num == result[j]){  
                    flag = false;  
                    break;  
                }  
            }  
            if(flag){  
                result[count] = num;  
                count++;  
            }  
        }  
        return result;  
    }  
}  