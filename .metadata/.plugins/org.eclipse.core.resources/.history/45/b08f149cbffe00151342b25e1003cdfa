package com.cn.hnust.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cn.hnust.pojo.Manager;
import com.cn.hnust.pojo.Order;
import com.cn.hnust.pojo.Page;
import com.cn.hnust.service.OrderService;

@Controller
@RequestMapping("/order")
public class OrderController {
	@Resource
	private OrderService orderService;
	@RequestMapping("/getOrderByPage")
	public String getOrderByPage(HttpServletRequest request, Model model,
			Order order, HttpSession session) {
		List<Order> orderList = new ArrayList<Order>();
		int counts;// 分页记录总数
		String pageNow = request.getParameter("pageNow");
		System.out.println("pagenow:"+pageNow);
		String countString=request.getParameter("allcount");
		Page page = null;
		// 判断分页参数
		Order orderParams = (Order) session.getAttribute("orderParams");
		if (countString != null) {
			counts = Integer.parseInt(countString);
			order=orderParams;
		} else {
			counts = orderService.getCounts(order);
			
		}
		System.out.println("count:"+counts);
		 // 添加查询条件
		order.setOrderdate("2016");
		Map<String, Object> condition = new HashMap<String, Object>();
		//System.out.println(order.getOrderdate());
		condition.put("id", order.getId());
		condition.put("customerid", order.getCustomerid());
		condition.put("orderid", order.getOrderid());
		condition.put("orderdate", order.getOrderdate());
		condition.put("phone", order.getPhone());
		condition.put("status", order.getStatus());
		if (pageNow != null && pageNow != "") {
			page = new Page(counts, Integer.parseInt(pageNow));
		} else {
			page = new Page(counts, 1);
		}
		condition.put("startPos", page.getStartPos());
		condition.put("pageSize", page.getPageSize());
		orderList = this.orderService.getOrderByPage(condition);
		model.addAttribute("orderList", orderList);
		model.addAttribute("page", page);
		model.addAttribute("orderParams", order);
		session.setAttribute("orderParams", order);
		model.addAttribute("url", "/order/getOrderByPage");
		//下面判断是否从删除页面跳转过来
	/*	String deleted=(String) session.getAttribute("deleted");
		//System.out.println("删除状态："+deleted);
		if(deleted!=null){
			model.addAttribute("deleted", deleted);
			session.removeAttribute("deleted");
		}*/
		return "order/orderList";
	}

}
