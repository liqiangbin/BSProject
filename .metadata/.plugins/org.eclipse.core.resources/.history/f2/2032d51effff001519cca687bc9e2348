package com.cn.hnust.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cn.hnust.pojo.Book;
import com.cn.hnust.pojo.Order;
import com.cn.hnust.pojo.OrderDetial;
import com.cn.hnust.pojo.Page;
import com.cn.hnust.service.BookService;

@Controller
@RequestMapping("/book")
public class BookController {
	@Resource
	private BookService bookService;
	@RequestMapping("/getBookByPage")
	public String getBookByPage(HttpServletRequest request, Model model,
			Book book, HttpSession session) {
		List<Book> bookList = new ArrayList<Book>();
		int counts;// 分页记录总数
		String pageNow = request.getParameter("pageNow");
		String countString=request.getParameter("allcount");
		Page page = null;
		// 判断分页参数
		Book bookParams = (Book) session.getAttribute("bookParams");
		if (countString != null) {
			counts = Integer.parseInt(countString);
			book=bookParams;
		} else {
			counts = bookService.getCounts(book);
			
		}
		 // 添加查询条件
		Map<String, Object> condition = new HashMap<String, Object>();
		condition.put("id", order.getId());
		condition.put("customerid", order.getCustomerid());
		condition.put("orderid", order.getOrderid());
		condition.put("orderdate", order.getOrderdate());
		condition.put("phone", order.getPhone());
		condition.put("status", order.getStatus());
		if (pageNow != null && pageNow != "") {
			page = new Page(counts, Integer.parseInt(pageNow));
		} else {
			page = new Page(counts, 1);
		}
		condition.put("startPos", page.getStartPos());
		condition.put("pageSize", page.getPageSize());
		bookList = this.bookService.getBookByPage(condition);
		model.addAttribute("bookList", bookList);
		model.addAttribute("page", page);
		model.addAttribute("bookParams", book);
		session.setAttribute("bookParams", book);
		model.addAttribute("url", "/book/getBookByPage");
		return "order/orderList";
	}
	@RequestMapping("/orderDetial")
	public String orderDetial(HttpServletRequest request, Model model,
			HttpSession session) {
		String  orderid = request.getParameter("orderid");
		List<Order> orderList=new ArrayList<Order>();
		List<OrderDetial> orderDetialList=new ArrayList<OrderDetial>();
		Map<String, Object> condition = new HashMap<String, Object>();
		condition.put("orderid", orderid);
		orderList=orderService.getOrderNoPage(condition);
		//detial 查询条件
		Map<String, Object> detialCondition = new HashMap<String, Object>();
		detialCondition.put("orderid", orderid);
		orderDetialList=orderDetialService.getOrderDetialNoPage(condition);
        //传值到页面
		Order order=orderList.get(0);
		model.addAttribute("order", order);
		model.addAttribute("orderDetialList", orderDetialList);
		return "order/orderDetial";
	}
	@RequestMapping("/orderUpdate")
	public String orderUpdate(HttpServletRequest request, Model model,
			Order order) {
		int  id = Integer.parseInt(request.getParameter("id"));
		int   status =Integer.parseInt(request.getParameter("status"));
		order.setId(id);
		order.setStatus(status);
		int xx=orderService.updateByPrimaryKeySelective(order);
		System.out.println(xx);
		return "redirect:/order/getOrderByPage";
	}
	

}
