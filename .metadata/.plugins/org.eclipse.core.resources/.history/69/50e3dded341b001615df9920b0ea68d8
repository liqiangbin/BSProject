package test;

import java.util.List;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.cn.hnust.dao.CustomerDao;
import com.cn.hnust.dao.ShopCarDao;
import com.cn.hnust.pojo.Assess;
import com.cn.hnust.pojo.Book;
import com.cn.hnust.pojo.Customer;
import com.cn.hnust.pojo.Interest;
import com.cn.hnust.pojo.Order;
import com.cn.hnust.pojo.ShopCar;
import com.cn.hnust.service.AssessService;
import com.cn.hnust.service.BookService;
import com.cn.hnust.service.IUserService;
import com.cn.hnust.service.InterestService;
import com.cn.hnust.service.OrderService;
import com.cn.hnust.service.ShopCarService;
  
@RunWith(SpringJUnit4ClassRunner.class)     //��ʾ�̳���SpringJUnit4ClassRunner��  
@ContextConfiguration(locations = {"classpath:spring-mybatis.xml"})  
  
public class test {  
    private static Logger logger = Logger.getLogger(test.class);  
//  private ApplicationContext ac = null;  
    @Resource  
    private  IUserService userService = null;
    @Resource  
    private OrderService orderService = null; 
    @Resource  
    private CustomerDao customerDao;
    @Resource  
    private ShopCarDao shopCarDao;
    @Resource  
    private ShopCarService shopCarService;
    @Resource  
    private InterestService interestService;
    @Resource  
    private AssessService assessService;
    @Resource  
    private BookService bookService;
    
    /**
     * 测试按月查询订单
     */
    
    @Test
    public void countTest(){
    	List<Order> list=orderService.findByMonth("2016-04-28%");
    	System.out.println("listsize()"+list.size());
    	String s="2016-04-28";
    	String m=s.substring(8, 10);
    	System.out.println(m);
    }
    //测试顾客注册
    @Test
    public void CustomerRegeist(){
    	Customer customer=new Customer();
    	customer.setLoginname("overkill");
    	customer.setPassword("111111");
    	int s=customerDao.insert(customer);
    			System.out.println("测试添加："+s);
    	
    }
  //测试顾客修改个人信息
    @Test
    public void CustomerUpdate(){
    	Customer customer=new Customer();
    	customer.setId(1);
    	customer.setLoginname("overkill44");
    	customer.setPassword("111111");
    	int s=customerDao.updateByPrimaryKeySelective(customer);
    			System.out.println("测试添加："+s);
    }
    //测试添加购物车
    @Test
    public void shopCarInsert(){
    	ShopCar shopCar=new ShopCar();
    	shopCar.setBookid(2);
    	shopCar.setCustomerid(1);
    	shopCar.setPrice(23.3);
    	shopCar.setQuantity(23);
    	int s=shopCarDao.insert(shopCar);
    			System.out.println("测试添加："+s);
    }
    //测试查看我的购物车
    @Test
    public void selectByCusId(){
    	List<ShopCar> list=shopCarService.selectByCusId(1);
    	for (ShopCar shopCar : list) {
			System.out.println(shopCar.getQuantity());
		}
    }
    //测试查删除购物车商品
    @Test
    public void deleteGoods(){
    	int m=shopCarService.deleteById(3);
    	System.out.println("删除结果："+m);
    }
    
    //测试兴趣问卷
    @Test
    public void InsertInterest(){
    	Interest  interest=new Interest();
    	interest.setCustomerid(1);
    	interest.setInterestedsubtypeid("1002&1003&1001");
    	interestService.insert(interest);
    }
    //测试兴趣问卷
    @Test
    public void updateInterest(){
    	Interest  interest=new Interest();
    	interest.setId(2);
    	interest.setCustomerid(1);
    	interest.setInterestedsubtypeid("1002&1002");
    	interestService.update(interest);
    }
    //测试评价
    @Test
    public void insertAssess(){
    	Assess  assess=new Assess();
    	assess.setBookid(2);
    	assess.setComment("这书垃圾");
    	assess.setRank(4);
    	assessService.insert(assess);
    }
    @Test
    public void sellectByBookId(){
    	List<Assess>  assessList=assessService.SelectByBookId(2);
    	System.out.println("结果："+assessList.size());
    }
    @Test
    public void calRank(){
    	List<Assess>  assessList=assessService.SelectByBookId(2);
    	double rank=assessService.calRank(2);
    	System.out.println("评分结果："+rank);
    }
    @Test
    public void getBookBySql(){
    	//String sql="'%java%' or name like '%2%' or name like '%html%' or name like '%j4%'";
    	String sql="java";
    	List<Book>searchBookList=bookService.getBookBySql(sql);
		for (Book book : searchBookList) {
			System.out.println("book::::::"+book.getName());
		}
    }
}