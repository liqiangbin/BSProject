package com.cn.hnust.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cn.hnust.pojo.Notice;
import com.cn.hnust.pojo.Subtype;
import com.cn.hnust.pojo.Type;
import com.cn.hnust.service.SubTypeService;
import com.cn.hnust.service.TypeService;

@Controller  
@RequestMapping("/subType")  
public class SubTypeController {
	@Resource 
    private SubTypeService subTypeService; 
	@Resource 
    private TypeService typeService; 
	/**
	 * 
	 * @param request
	 * @param model
	 * @param subtype
	 * @param type
	 * @return
	 */
	@RequestMapping("/SellectByParams")  
    public String toIndex(HttpServletRequest request,Model model,Subtype subtype,Type type){ 
		type.setId(null);
		//System.out.println("---"+subtype.getId()+"--"+subtype.getTypenumber());
        List<Subtype> subList=this.subTypeService.getAllSelect(subtype);
        //System.out.println("type==="+type.getTypenumber()+"id:"+subtype.getId());
        //System.out.println("subtype==="+type.getTypenumber()+"id:"+subtype.getId());
        List<Type> typeList=this.typeService.getByParams(type);
       // System.out.println("typeList"+typeList.size());
        List<Subtype> subAll=this.subTypeService.selectAll();
        List<Type> typeAll=this.typeService.selectAll();
        model.addAttribute("subAll",subAll);
		model.addAttribute("typeAll",typeAll);
		model.addAttribute("subList",subList);
		model.addAttribute("typeList",typeList);
		model.addAttribute("subtypeParams",subtype);
		//System.out.println("TypeList:"+typeList.size()+typeList.get(0).getTypedescn());
		//System.out.println("subList:"+subList.size());
        return "manager/type"; 
    } 
	/**
	 * 
	 * @param request
	 * @param model
	 * @param type
	 * @param session
	 * @return
	 */
	@RequestMapping("/deleteType")
	public String deleteTypeById(HttpServletRequest request, Model model,
			Type type,HttpSession session) {
		int typenumber = Integer.parseInt(request.getParameter("typeNumber"));
		int xx=typeService.deleteByTypeNumber(typenumber);
		if (xx != 0) {
		    session.setAttribute("noticeDeleted", "success");
		} 
		return "redirect:/notice/getNoticeByPage";
	}
	@RequestMapping("/deleteSubType")
	public String deleteSubById(HttpServletRequest request, Model model,
			Type type,HttpSession session) {
		int typenumber = Integer.parseInt(request.getParameter("typeNumber"));
		int xx=typeService.deleteByTypeNumber(typenumber);
		if (xx != 0) {
		    session.setAttribute("noticeDeleted", "success");
		} 
		return "redirect:/notice/getNoticeByPage";
	}

}
