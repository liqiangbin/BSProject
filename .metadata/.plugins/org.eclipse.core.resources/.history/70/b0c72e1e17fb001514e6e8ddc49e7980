<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.NoticeDao" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.Notice" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="authorName" property="authorname" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cn.hnust.pojo.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, date, title,content, authorName, type
  </sql>
  <sql id="noticeParams" >
		<if test="id != null">
			AND Id = #{id}
		</if>
		<if test="date != null and date !=''">
			AND date = #{date}
		</if>
		<if test="title != null and title !=''">
			AND title LIKE '%'||#{title}||'%'
		</if>
		<if test="content!= null and content !=''">
			AND content LIKE '%'||#{content}||'%'
		</if>
		<if test="authorname!= null and authorname!=''">
			AND authorName = #{authorname}
		</if>
		<if test="type != null ">
			AND type = #{type}
		</if>
		
	</sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.Notice" >
    insert into notice (Id, date, title, 
      authorName, type, content
      )
    values (#{id,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{authorname,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="authorname != null" >
        authorName,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorname != null" >
        #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.Notice" >
    update notice
    <set >
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorname != null" >
        authorName = #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cn.hnust.pojo.Notice" >
    update notice
    set date = #{date,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      authorName = #{authorname,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.Notice" >
    update notice
    set date = #{date,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      authorName = #{authorname,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCounts" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*) FROM notice
		WHERE 1=1 
		<include refid="noticeParams" />
		
	</select>
	 <select id="getNoticeByPage" resultMap="BaseResultMap"> 
	 select 
	 <include refid="Base_Column_List" /> 
		from notice WHERE 1=1
		<include refid="noticeParams" />
		order by Id DESC 
		limit #{startPos},#{pageSize} 
	</select>
</mapper>